simdf
load("data/simdf.RData")
head(simdf)
library(QREM)
?QREM
data(simdf)
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=0.2)
qremFit
qremFit$empq
plot(qremFit$ui)
qremFit
qremFit$iter
qremFit$err
qremFit$fitted.mod
covmat <- bcov(qremFit,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
covmat
estBS <- boot.QREM(func="lm", linmod=y~x*x2 +x3, df = simdf, qn=0.2,
n=nrow(simdf), sampleFrom=NULL,B=50)
library("paralle")
library("parallel")
detach("package:QREM", unload=TRUE)
library(QREM)
?QREM
data(simdf)
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=0.2)
summary(qremFit$fitted.mod)
covmat <- bcov(qremFit,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
sqrt(diag(covmat))
estBS <- boot.QREM(func="lm", linmod=y~x*x2 +x3, df = simdf, qn=0.2,
n=nrow(simdf), sampleFrom=NULL,B=50)
detach("package:QREM", unload=TRUE)
library(QREM)
data(simdf)
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=0.2)
summary(qremFit$fitted.mod)
covmat <- bcov(qremFit,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
covmat
estBS <- boot.QREM(func="lm", linmod=y~x*x2 +x3, df = simdf, qn=0.2,
n=nrow(simdf), sampleFrom=NULL,B=50)
estBD
estBS
apply(estBS,2,sd)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, 0.2,  plot.it = TRUE)
qrdg <- QRdiagnostics(simdf$x3, "x3",qremFit$ui, 0.2,  plot.it = TRUE)
L <- 20
qns <- seq(0.1,0.9,by=0.1)
xqs <- quantile(x, probs = (1:(L-1))/L)
names(xqs) <- c()
qqp  <- matrix(0, nrow=length(xqs), ncol=length(qns))
i <- 1
for (qn in qns){
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=qn)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, qn,  plot.it = FALSE)
for (j in 1:(L-1)) {
qqp[j,i] <- length(which(qrdg$y < xqs[j])) / length(which(qrdg$x < xqs[j]))
}
i <- i+1
}
flatQQplot(simdf$x,xqs,qqp,qns)
L <- 20
qns <- seq(0.1,0.9,by=0.1)
xqs <- quantile(simdf$x, probs = (1:(L-1))/L)
names(xqs) <- c()
qqp  <- matrix(0, nrow=length(xqs), ncol=length(qns))
i <- 1
for (qn in qns){
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=qn)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, qn,  plot.it = FALSE)
for (j in 1:(L-1)) {
qqp[j,i] <- length(which(qrdg$y < xqs[j])) / length(which(qrdg$x < xqs[j]))
}
i <- i+1
}
flatQQplot(simdf$x,xqs,qqp,qns)
library(QREM)
?QREM
data(simdf)
L <- 20
qns <- seq(0.1,0.9,by=0.1)
xqs <- quantile(sidf$x, probs = (1:(L-1))/L)
names(xqs) <- c()
qqp  <- matrix(0, nrow=length(xqs), ncol=length(qns))
i <- 1
for (qn in qns){
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=qn)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, qn,  plot.it = FALSE)
for (j in 1:(L-1)) {
qqp[j,i] <- length(which(qrdg$y < xqs[j])) / length(which(qrdg$x < xqs[j]))
}
i <- i+1
}
flatQQplot(simdf$x,xqs,qqp,qns)
library(QREM)
?flatQQplot
data(simdf)
L <- 20
qns <- seq(0.1,0.9,by=0.1)
xqs <- quantile(simdf$x, probs = (1:(L-1))/L)
names(xqs) <- c()
qqp  <- matrix(0, nrow=length(xqs), ncol=length(qns))
i <- 1
for (qn in qns){
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=qn)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, qn,  plot.it = FALSE)
for (j in 1:(L-1)) {
qqp[j,i] <- length(which(qrdg$y < xqs[j])) / length(which(qrdg$x < xqs[j]))
}
i <- i+1
}
flatQQplot(simdf$x,xqs,qqp,qns)
qrdg
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=0.2)
estBS <- boot.QREM(func="lm", linmod=y~x*x2 +x3, df = simdf, qn=0.2,
n=nrow(simdf), sampleFrom=NULL,B=50)
apply(estBS,2,sd)
sqrt(diag(bcov(qremFit,linmod=y~x*x2 +x3, df=simdf, qn=0.2)))
?QREM
library("QREM")
?QREM
setwd("~/Desktop/Eran/")
dat <- read.csv("Merged.csv",header = TRUE)
dat[1:5,1:5]
plot(dat$pCountIsMeasurable1,cex=0.1)
inc <- which(dat$pCountIsMeasurable1 >= 0.8)
inc2 <- which(dat$pCountIsMeasurable2 >= 0.8) #433
intersect(inc1, inc2)
inc1 <- which(dat$pCountIsMeasurable1 >= 0.8) #433
inc2 <- which(dat$pCountIsMeasurable2 >= 0.8) #530
intersect(inc1, inc2)
inc <- intersect(inc1, inc2)
dat1 <- dat[inc,]
dat1[1:5,1;4]
dat1[1:5,1:4]
dat1[1:7,1:4]
dat1[1:5,1:8]
colnames(dat1)
batch1 <- dat1[,5:77]
image(batch1)
batch1 <- as.matrix(dat1[,5:77])
image(batch1)
batch1[1:5,]
image(log(batch1))
clin <- read.csv("ICI4-Input/Indivumed1-LodAsIs.csv",header = TRUE)
clin(1:5,1:5)
clin[1:5,1:5]
colnames(clin)
clin <- read.csv("ICI4-Input/Clinical data Indivumed I.txt",SEP="\T",header = TRUE)
clin <- read.csv("ICI4-Input/Clinical data Indivumed I.txt",SEP="\t",header = TRUE)
clin <- read.csv("ICI4-Input/Clinical data Indivumed I.txt",sep="\t",header = TRUE)
clin
head(clin)
clin$Disease
clin$Stage
clin2 <- read.csv("ICI4-Input/Clinical data Indivumed II.txt",sep="\t",header = TRUE)
clin2
clin$Disease
colnames(clin)
summary(clin)
colnames(batch1)
dat1
dat1[1,]
dat1[1:2,]
colnames(dat1)
batch2 <- as.matrix(dat1[,81:137])
image(log(batch2))
table(clin2$Response..SD...R.)
clin$Disease
clin2$Disease
library(QREM)
?QREM
data(simdf)
qremFit <-  QREM("lm",linmod=y~x*x2 +x3, df=simdf, qn=0.2)
estBS <- boot.QREM(func="lm", linmod=y~x*x2 +x3, df = simdf, qn=0.2,
n=nrow(simdf), sampleFrom=NULL,B=50)
apply(estBS,2,sd)
library(QREM)
library(QREM)
?QREM
library(QREM)
?QREM
data(simdf)
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
summary(qremFit$fitted.mod)
library(QREM)
?bcov
data(simdf)
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
covmat <- bcov(qremFit,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
covmat
estBS <- boot.QREM(lm, linmod=y~x*x2 +x3, df = simdf, qn=0.2,
n=nrow(simdf), B=50)
apply(estBS,2,sd)
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, 0.2,  plot.it = TRUE)
qrdg <- QRdiagnostics(simdf$x3, "x3",qremFit$ui, 0.2,  plot.it = TRUE)
L <- 20
qns <- seq(0.1,0.9,by=0.1)
xqs <- quantile(simdf$x, probs = (1:(L-1))/L)
names(xqs) <- c()
qqp  <- matrix(0, nrow=length(xqs), ncol=length(qns))
i <- 1
for (qn in qns){
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=qn)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, qn,  plot.it = FALSE)
for (j in 1:(L-1)) {
qqp[j,i] <- length(which(qrdg$y < xqs[j])) / length(which(qrdg$x < xqs[j]))
}
i <- i+1
}
flatQQplot(simdf$x,xqs,qqp,qns)
?pdf
?Diagonal
?Matrix::Diagonal
data(simLargeP)
simLargeP
dim(simLargeP)
library(QREM)
qn <- 0.25
res <- QREM_vs(system.file("extdata", "simLargeP.RData", package = "QREM", mustWork = TRUE), 1, 2:51, qn=qn)
?QREM
load(system.file("extdata", "simLargeP.RData", package = "QREM", mustWork = TRUE))
library(QREM)
load(system.file("extdata", "simLargeP.RData", package = "QREM", mustWork = TRUE))
library(QREM)
load(system.file("extdata", "simLargeP.RData", package = "QREM", mustWork = TRUE))
res <- QREM_vs(system.file("extdata", "simLargeP.RData", package = "QREM", mustWork = TRUE), 1, 2:51, qn=qn)
load(system.file("data", "simLargeP.RData", package = "QREM", mustWork = TRUE))
source('~/Dropbox/Packages/QREM/R/QREM.R')
?save
?tempfile
tempfile(c("ab", "a b c"))
tempdir()
tempfile()
class(simLargeP)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP.RData, 1, 2:51, qn=qn)
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
filename="/var/folders/lw/f9y_rrvs1lncs_8wvgg56kd00000gp/T//Rtmp87qGXf/filee041361358d2"
dataYXZ <- readInputFile(filename, ycol=ycol, Xcols = Xcols, Zcols=Zcols)
dataYXZ <- readInputFile(filename, ycol=1,  Zcols=2:501)
load(filename)
rm(simLargeP)
load(filename)
input[1:5,1:5]
?input
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
filename="/var/folders/lw/f9y_rrvs1lncs_8wvgg56kd00000gp/T//Rtmp87qGXf/filee041302c5eba"
load(filename)
dataYXZ <- readInputFile(filename,ycol=1,Zcols=2:51)
readInputFile
data <- get(load(filename))
data[1:4,1:4]
dataYXZ <- readInputFile(filename,ycol=1,Zcols=2:51)
source('~/Dropbox/Packages/QREM/R/QREM.R')
data(simLargeP)
qn
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
warnings()
res$fittedSEMMS$gam.out$nn
dfsemms <- simLargeP[,c(1, 1+res$fittedSEMMS$gam.out$nn)]
qremFit <- QREM(lm, y~., dfsemms, qn=qn)
estBS <- boot.QREM(lm, linmod=y~., df=dfsemms, qn=0.2, n=length(y), B=50)
estBS <- boot.QREM(lm, linmod=y~., df=dfsemms, qn=0.2, n=length(dfsemms$y), B=50)
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
dfsemms <- simLargeP[,c(1, 1+res$fittedSEMMS$gam.out$nn)]
qremFit <- QREM(lm, y~., dfsemms, qn=qn)
?readInputFile
data(simLargeP)
class(simLargeP)
class(simLargeP) == "data.frame"
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
class(simLargeP) == "data.frame"
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
dir(filename)
dir("/var/folders/lw/f9y_rrvs1lncs_8wvgg56kd00000gp/T//Rtmp87qGXf/filee04148484658")
load("/var/folders/lw/f9y_rrvs1lncs_8wvgg56kd00000gp/T//Rtmp87qGXf/filee04148484658")
data=get(load("/var/folders/lw/f9y_rrvs1lncs_8wvgg56kd00000gp/T//Rtmp87qGXf/filee04148484658"))
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
data(simLargeP)
qn=0.25
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
system.file(filename)
filename="/var/folders/lw/f9y_rrvs1lncs_8wvgg56kd00000gp/T//Rtmp87qGXf/filee0411ac658e6"
system.file(filename)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
res <- QREM_vs(simLargeP, 1, 2:51, qn=0.25)
source('~/Dropbox/Packages/QREM/R/QREM.R')
?QREM
library(QREM)
data(simdf)
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
summary(qremFit$fitted.mod)
data(simLargeP)
qn=0.25
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
res <- QREM_vs(simLargeP, 1, 2:51, qn=qn)
dfsemms <- simLargeP[,c(1, 1+res$fittedSEMMS$gam.out$nn)]
qremFit <- QREM(lm, y~., dfsemms, qn=qn)
ests <- rbind(qremFit$coef$beta,
sqrt(diag(bcov(qremFit,linmod=y~., df=dfsemms, qn=0.2))))
rownames(ests) <- c("Estimate","s.d")
ests
data(simdf)
L <- 20
qns <- seq(0.1,0.9,by=0.1)
xqs <- quantile(simdf$x, probs = (1:(L-1))/L)
names(xqs) <- c()
qqp  <- matrix(0, nrow=length(xqs), ncol=length(qns))
i <- 1
for (qn in qns){
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=qn)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, qn,  plot.it = FALSE)
for (j in 1:(L-1)) {
qqp[j,i] <- length(which(qrdg$y < xqs[j])) / length(which(qrdg$x < xqs[j]))
}
i <- i+1
}
flatQQplot(simdf$x,xqs,qqp,qns)
dim(simLargeP)
data(simdf)
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
qrdg <- QRdiagnostics(simdf$x, "x",qremFit$ui, 0.2,  plot.it = TRUE)
qrdg <- QRdiagnostics(simdf$x3, "x3",qremFit$ui, 0.2,  plot.it = TRUE)
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
estBS <- boot.QREM(lm, linmod=y~x*x2 +x3, df = simdf, qn=0.2,
n=nrow(simdf), B=50)
apply(estBS,2,sd)
qremFit
qremFit$fitted.mod
str(qremFit$fitted.mod)
class(qremFit$fitted.mod)
summary(qremFit$fitted.mod)
summary(qremFit$fitted.mod)
?do.call
summary(aov(qremFit$fitted.mod))
summary(aov(qremFit$fitted.mod)$coef)
summary(coefficients(qremFit$fitted.mod))
summary(coef(qremFit$fitted.mod))
summary(aov(qremFit$fitted.mod)$coef)
summary(aov(qremFit$fitted.mod))
summary(qremFit$fitted.mod)
summary(qremFit$fitted.mod)$coef
summary(qremFit$fitted.mod)$coef
data(simdf)
qremFit <-  QREM(lm,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
covmat <- bcov(qremFit,linmod=y~x*x2 +x3, df=simdf, qn=0.2)
covmat
library(QREM)
library(QREM)
